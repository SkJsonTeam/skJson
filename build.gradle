import java.math.BigInteger
import java.security.MessageDigest

plugins {
    java
    id("com.github.johnrengelman.shadow") version "8.3.5"
    id("xyz.jpenilla.run-paper") version "2.3.1"
}

group = "cz.coffee"
version = "4.1.0"

// Generátor SHA1 hash
fun generateSHA1(): String {
    val time = System.currentTimeMillis().toString()
    val md = MessageDigest.getInstance("SHA-1")
    val digest = md.digest(time.toByteArray())
    return BigInteger(1, digest).toString(16).padStart(40, '0')
}

// Generátor zkráceného SHA1 hash
fun generateShortSHA1(sha1: String): String = sha1.substring(0, 8)

// Repozitáře
repositories {
    mavenCentral()
    maven("https://jitpack.io")
    maven("https://repo.skriptlang.org/releases")
    maven("https://oss.sonatype.org/content/groups/public/")
    maven("https://repo.papermc.io/repository/maven-public/")
    maven("https://repo.purpurmc.org/snapshots")
    maven("https://repo.codemc.io/repository/maven-public/")
}

// Importy externích konfigurací
apply(from = "dependencies.gradle.kts")
apply(from = "resources.gradle.kts")

// Nastavení kompilace Javy
tasks.withType<JavaCompile>().configureEach {
    options.encoding = "UTF-8"
    options.compilerArgs.add("--enable-preview")
}

// Generování hashů
val fullRev = generateSHA1()
val shortRev = generateShortSHA1(fullRev)

// Zpracování zdrojových souborů
tasks.processResources {
    filesMatching(listOf("plugin.yml", "lang/default.lang")) {
        expand(mapOf("version" to project.version, "rev" to shortRev))
    }
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

// Konfigurace jar souboru
tasks.jar {
    manifest {
        attributes(
                "Implementation-Title" to "SkJson",
                "Implementation-Version" to project.version
        )
    }
}

// ShadowJar nastavení
tasks.withType<com.github.jengelman.gradle.plugins.shadow.tasks.ShadowJar>().configureEach {
    archiveClassifier.set("shaded")

    // Relokace pro bStats a NBT API
    relocate("org.bstats", "cz.coffee.shadowed.bstats")
    relocate("de.tr7zw.changeme.nbtapi", "cz.coffee.shadowed.nbtapi")

    // Vyloučení META-INF souborů
    exclude("META-INF/*.MF", "META-INF/*.SF", "META-INF/*.DSA", "META-INF/*.RSA")
}

// Task pro build a vzdálené spuštění
tasks.register("withRemote") {
    dependsOn("clean", "shadowJar")
    finalizedBy("runRemote")
}

// Volání API funkce
fun callAPI(cmd: String) {
    val command = "curl -s http://localhost:8080/command?cmd=$cmd"
    println("Executing: $command")
    val process = Runtime.getRuntime().exec(command)
    val output = process.inputStream.bufferedReader().readText()
    val errorOutput = process.errorStream.bufferedReader().readText()

    process.waitFor()

    if (process.exitValue() == 0) {
        println("Command executed successfully:\n$output")
    } else {
        println("Command failed with exit code ${process.exitValue()}:\n$errorOutput")
    }
}

// Task pro vzdálené spuštění
tasks.register("runRemote") {
    doLast {
        callAPI("reload+confirm")
    }
}

// Konfigurace běhu serveru
tasks.withType<xyz.jpenilla.runpaper.task.RunServer>().configureEach {
    minecraftVersion("1.21.3")

    downloadPlugins {
        url("https://github.com/SkriptLang/Skript/releases/download/2.9.4/Skript-2.9.4.jar")
    }
}
